"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""

"""
def bottom_up(N):
    fib = [0] * (N + 1)
    fib[N] = 0
    fib[1] = 1

    for i in range(2, N + 1):
        fib[i] = fib[i - 1] + fib[i - 2]
    return fib[N]


print(bottom_up(1001))
"""


def bottom_up(n):
    fib = [0] * (n + 1)
    fib[n] = 0
    fib[1] = 1
    list_to_sum = []

    for i in range(2, n + 1):
        fib[i] = fib[i - 1] + fib[i - 2]
        if fib[i] < 4000000 and fib[i] % 2 == 0:
            list_to_sum.append(fib[i])
    return list_to_sum


print(sum(bottom_up(101)))
